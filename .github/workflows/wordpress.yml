name: Deploy Plugin

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  lint:
    uses: tarosky/workflows/.github/workflows/phpcs.yml@main
    with:
      version: 7.2

  assets:
    name: Assets Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Install NPM Packages
        run: npm install

      - name: Check JS & CSS syntax
        run: npm run lint

  status-check:
    name: Status Check
    runs-on: ubuntu-latest
    if: always()
    needs: [ lint, assets ]
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  release:
    name: Deploy WordPress.org
    if: contains(github.ref, 'tags/')
    needs: [ status-check ]
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://wordpress.org/plugins/${{ github.event.repository.name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Setup PHP with composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.2
          tools: composer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Build Plugin
        run: bash bin/build.sh ${{ github.ref }}

      - name: Deploy to WordPress Directory
        id: deploy
        uses: 10up/action-wordpress-plugin-deploy@stable
        with:
          generate-zip: true
        env:
          SVN_USERNAME: ${{ secrets.WP_ORG_USERNAME_TAROSKY }}
          SVN_PASSWORD: ${{ secrets.WP_ORG_PASSWORD_TAROSKY }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip
